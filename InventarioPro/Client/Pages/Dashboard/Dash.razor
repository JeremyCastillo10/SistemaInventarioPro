@page "/dashboard"
@using System.Net.Http.Json
@using InventarioPro.Shared.DTOS.Categoria
@using InventarioPro.Shared.DTOS.Producto
@using InventarioPro.Shared.DTOS.Venta
@inject HttpClient Http

<PageTitle>Dashboard de Inventario</PageTitle>

<RadzenText TextStyle="TextStyle.H4" TagName="TagName.H1" class="rz-pt-4">
    Dashboard de Inventario
</RadzenText>

<RadzenStack Gap="0.5rem">
    <RadzenCard class="rz-my-4 rz-p-4">
        <RadzenText TextStyle="TextStyle.H5" class="rz-mb-4">Resumen del Inventario</RadzenText>

        <RadzenRow JustifyContent="Radzen.JustifyContent.SpaceBetween" class="rz-mb-5">
            <RadzenColumn SizeSM="6" SizeMD="4" SizeLG="3" class="rz-mb-3 rz-mb-sm-0">
                <RadzenCard Variant="Radzen.Variant.Outlined"
                            class="rz-p-3 rz-h-100 rz-text-center rz-text-sm-left"
                            Style="background-color: #e6f2ff;">
                    <RadzenStack Gap="0.5rem" JustifyContent="Radzen.JustifyContent.SpaceBetween" class="rz-h-100">
                        <RadzenText TextStyle="TextStyle.H6" Style="color: #1565c0;">Total de Productos</RadzenText>
                        <RadzenText TextStyle="TextStyle.H4" Style="color: #0d47a1;">@totalProducts</RadzenText>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>

            <RadzenColumn SizeSM="6" SizeMD="4" SizeLG="3" class="rz-mb-3 rz-mb-sm-0">
                <RadzenCard Variant="Radzen.Variant.Outlined"
                            class="rz-p-3 rz-h-100 rz-text-center rz-text-sm-left"
                            Style="background-color: #e8f5e9;">
                    <RadzenStack Gap="0.5rem" JustifyContent="Radzen.JustifyContent.SpaceBetween" class="rz-h-100">
                        <RadzenText TextStyle="TextStyle.H6" Style="color: #2e7d32;">Productos en Stock</RadzenText>
                        <RadzenText TextStyle="TextStyle.H4" Style="color: #1b5e20;">@inStock</RadzenText>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>

            <RadzenColumn SizeSM="6" SizeMD="4" SizeLG="3" class="rz-mb-3 rz-mb-md-0">
                <RadzenCard Variant="Radzen.Variant.Outlined"
                            class="rz-p-3 rz-h-100 rz-text-center rz-text-sm-left"
                            Style="background-color: #ffebee;">
                    <RadzenStack Gap="0.5rem" JustifyContent="Radzen.JustifyContent.SpaceBetween" class="rz-h-100">
                        <RadzenText TextStyle="TextStyle.H6" Style="color: #d32f2f;">Productos Agotados</RadzenText>
                        <RadzenText TextStyle="TextStyle.H4" Style="color: #b71c1c;">@outOfStock</RadzenText>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>

            <RadzenColumn SizeSM="6" SizeMD="4" SizeLG="3" class="rz-mb-3 rz-mb-lg-0">
                <RadzenCard Variant="Radzen.Variant.Outlined"
                            class="rz-p-3 rz-h-100 rz-text-center rz-text-sm-left"
                            Style="background-color: #f3e5f5;">
                    <RadzenStack Gap="0.5rem" JustifyContent="Radzen.JustifyContent.SpaceBetween" class="rz-h-100">
                        <RadzenText TextStyle="TextStyle.H6" Style="color: #6a1b9a;">Valor Total del Inventario</RadzenText>
                        <RadzenText TextStyle="TextStyle.H4" Style="color: #4a148c;">@(totalInventoryValue?.ToString("F2") ?? "0.00")</RadzenText>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>

            <RadzenColumn SizeSM="6" SizeMD="4" SizeLG="3" class="rz-mb-3 rz-mb-sm-0">
                <RadzenCard Variant="Radzen.Variant.Outlined"
                            class="rz-p-3 rz-h-100 rz-text-center rz-text-sm-left"
                            Style="background-color: #fff3e0;">
                    <RadzenStack Gap="0.5rem" JustifyContent="Radzen.JustifyContent.SpaceBetween" class="rz-h-100">
                        <RadzenText TextStyle="TextStyle.H6" Style="color: #e65100;">Promedio de Precio</RadzenText>
                        <RadzenText TextStyle="TextStyle.H4" Style="color: #bf360c;">@(averagePrice?.ToString("F2") ?? "0.00")</RadzenText>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>

            <RadzenColumn SizeSM="6" SizeMD="4" SizeLG="3" class="rz-mb-3 rz-mb-sm-0">
                <RadzenCard Variant="Radzen.Variant.Outlined"
                            class="rz-p-3 rz-h-100 rz-text-center rz-text-sm-left"
                            Style="background-color: #f1f8e9;">
                    <RadzenStack Gap="0.5rem" JustifyContent="Radzen.JustifyContent.SpaceBetween" class="rz-h-100">
                        <RadzenText TextStyle="TextStyle.H6" Style="color: #33691e;">Número de Categorías</RadzenText>
                        <RadzenText TextStyle="TextStyle.H4" Style="color: #1b5e20;">@totalCategories</RadzenText>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>

            <RadzenColumn SizeSM="12" SizeMD="4" SizeLG="3" class="rz-mb-3 rz-mb-md-0">
                <RadzenCard Variant="Radzen.Variant.Outlined"
                            class="rz-p-3 rz-h-100 rz-text-center rz-text-sm-left"
                            Style="background-color: #fff9c4;">
                    <RadzenStack Gap="0.5rem" JustifyContent="Radzen.JustifyContent.SpaceBetween" class="rz-h-100">
                        <RadzenText TextStyle="TextStyle.H6" Style="color: #ff6d00;">Productos con Bajo Stock</RadzenText>
                        <RadzenText TextStyle="TextStyle.H4" Style="color: #dd2c00;">@LowStockCount</RadzenText>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>

            <RadzenColumn SizeSM="12" SizeMD="4" SizeLG="3" class="rz-mb-3 rz-mb-md-0">
                <RadzenCard Variant="Radzen.Variant.Outlined"
                            class="rz-p-3 rz-h-100 rz-text-center rz-text-sm-left"
                            Style="background-color: #e3f2fd;">
                    <RadzenStack Gap="0.5rem" JustifyContent="Radzen.JustifyContent.SpaceBetween" class="rz-h-100">
                        <RadzenText TextStyle="TextStyle.H6" Style="color: #1976d2;">Stock Total</RadzenText>
                        <RadzenText TextStyle="TextStyle.H4" Style="color: #0d47a1;">@SoldProductsCount</RadzenText>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>

            <RadzenColumn SizeSM="12" SizeMD="4" SizeLG="4" class="rz-mb-3 rz-mb-md-0">
                <RadzenCard Variant="Radzen.Variant.Outlined"
                            class="rz-p-3 rz-h-100 rz-text-center rz-text-sm-left"
                            Style="background-color: #fce4ec;">
                    <RadzenStack Gap="0.5rem" JustifyContent="Radzen.JustifyContent.SpaceBetween" class="rz-h-100">
                        <RadzenText TextStyle="TextStyle.H6" Style="color: #ad1457;">Valor Promedio por Categoría</RadzenText>
                        <RadzenText TextStyle="TextStyle.H4" Style="color: #880e4f;">@(AverageCategoryValue.ToString("F2") ?? "0.00")</RadzenText>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>

            <RadzenColumn SizeSM="12" SizeMD="4" SizeLG="4" class="rz-mb-3 rz-mb-md-0">
                <RadzenCard Variant="Radzen.Variant.Outlined"
                            class="rz-p-3 rz-h-100 rz-text-center rz-text-sm-left"
                            Style="background-color: #fffde7;">
                    <RadzenStack Gap="0.5rem" JustifyContent="Radzen.JustifyContent.SpaceBetween" class="rz-h-100">
                        <RadzenText TextStyle="TextStyle.H6" Style="color: #ffa000;">Producto Más Caro</RadzenText>
                        <RadzenText TextStyle="TextStyle.H4" Style="color: #ff6f00;">@MostExpensiveProduct</RadzenText>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>

            <RadzenColumn SizeSM="12" SizeMD="4" SizeLG="4" class="rz-mb-3 rz-mb-md-0">
                <RadzenCard Variant="Radzen.Variant.Outlined"
                            class="rz-p-3 rz-h-100 rz-text-center rz-text-sm-left"
                            Style="background-color: #e0f2f1;">
                    <RadzenStack Gap="0.5rem" JustifyContent="Radzen.JustifyContent.SpaceBetween" class="rz-h-100">
                        <RadzenText TextStyle="TextStyle.H6" Style="color: #00695c;">Producto con Mayor Stock</RadzenText>
                        <RadzenText TextStyle="TextStyle.H4" Style="color: #004d40;">@MostStockedProduct</RadzenText>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>
        </RadzenRow>
    </RadzenCard>

    <RadzenCard class="rz-my-4 rz-p-4">
        <RadzenText TextStyle="TextStyle.H5" class="rz-mb-4">Resumen de Ventas</RadzenText>

        <RadzenRow JustifyContent="Radzen.JustifyContent.SpaceBetween" class="rz-mb-4">
            <RadzenColumn SizeMD="6" SizeLG="4" class="rz-mb-3 rz-mb-md-0">
                <RadzenCard Variant="Radzen.Variant.Filled"
                            class="rz-p-3 rz-text-center rz-text-md-left"
                            Style="background-color: #e3f2fd; color: #1565c0; border-radius: 8px;">
                    <RadzenStack Gap="0.5rem" JustifyContent="Radzen.JustifyContent.SpaceBetween">
                        <RadzenText TextStyle="TextStyle.H6" class="rz-mb-2">Total de Ventas</RadzenText>
                        <RadzenText TextStyle="TextStyle.H4">@(totalVentas?.ToString("F2") ?? "0.00")</RadzenText>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>

            <RadzenColumn SizeMD="6" SizeLG="4" class="rz-mb-3 rz-mb-md-0">
                <RadzenCard Variant="Radzen.Variant.Filled"
                            class="rz-p-3 rz-text-center rz-text-md-left"
                            Style="background-color: #f1f8e9; color: #2e7d32; border-radius: 8px;">
                    <RadzenStack Gap="0.5rem" JustifyContent="Radzen.JustifyContent.SpaceBetween">
                        <RadzenText TextStyle="TextStyle.H6" class="rz-mb-2">Número de Transacciones</RadzenText>
                        <RadzenText TextStyle="TextStyle.H4">@numeroTransacciones</RadzenText>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>

            <RadzenColumn SizeMD="12" SizeLG="4" class="rz-mb-3 rz-mb-lg-0">
                <RadzenCard Variant="Radzen.Variant.Filled"
                            class="rz-p-3 rz-text-center rz-text-md-left"
                            Style="background-color: #f3e5f5; color: #6a1b9a; border-radius: 8px;">
                    <RadzenStack Gap="0.5rem" JustifyContent="Radzen.JustifyContent.SpaceBetween">
                        <RadzenText TextStyle="TextStyle.H6" class="rz-mb-2">Promedio por Venta</RadzenText>
                        <RadzenText TextStyle="TextStyle.H4">@(promedioVenta?.ToString("F2") ?? "0.00")</RadzenText>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>
        </RadzenRow>

        <RadzenRow JustifyContent="Radzen.JustifyContent.SpaceBetween" class="rz-mb-4">
            <RadzenColumn SizeMD="12" SizeLG="4">
                <RadzenCard Variant="Radzen.Variant.Filled"
                            class="rz-p-3 rz-text-center rz-text-md-left"
                            Style="background-color: #e0f2f1; color: #00695c; border-radius: 8px;">
                    <RadzenStack Gap="0.5rem" JustifyContent="Radzen.JustifyContent.SpaceBetween">
                        <RadzenText TextStyle="TextStyle.H6" class="rz-mb-2">Última Venta</RadzenText>
                        <RadzenText TextStyle="TextStyle.H4">@(ultimaVenta?.ToString("F2") ?? "0.00")</RadzenText>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>

            <RadzenColumn SizeMD="6" SizeLG="4" class="rz-mb-3 rz-mb-md-0">
                <RadzenCard Variant="Radzen.Variant.Filled"
                            class="rz-p-3 rz-text-center rz-text-md-left"
                            Style="background-color: #fff3e0; color: #ef6c00; border-radius: 8px;">
                    <RadzenStack Gap="0.5rem" JustifyContent="Radzen.JustifyContent.SpaceBetween">
                        <RadzenText TextStyle="TextStyle.H6" class="rz-mb-2">Ventas Promedio por Día</RadzenText>
                        <RadzenText TextStyle="TextStyle.H4">@(ventasPromedioPorDia?.ToString("F2") ?? "0.00")</RadzenText>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>

            <RadzenColumn SizeMD="6" SizeLG="4" class="rz-mb-3 rz-mb-md-0">
                <RadzenCard Variant="Radzen.Variant.Filled"
                            class="rz-p-3 rz-text-center rz-text-md-left"
                            Style="background-color: #ffebee; color: #d32f2f; border-radius: 8px;">
                    <RadzenStack Gap="0.5rem" JustifyContent="Radzen.JustifyContent.SpaceBetween">
                        <RadzenText TextStyle="TextStyle.H6" class="rz-mb-2">Ventas Totales Último Mes</RadzenText>
                        <RadzenText TextStyle="TextStyle.H4">@(ventasTotalesUltimoMes?.ToString("F2") ?? "0.00")</RadzenText>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>

            <RadzenColumn SizeMD="6" SizeLG="4" class="rz-mb-3 rz-mb-md-0">
                <RadzenCard Variant="Radzen.Variant.Filled"
                            class="rz-p-3 rz-text-center rz-text-md-left"
                            Style="background-color: #fffde7; color: #fbc02d; border-radius: 8px;">
                    <RadzenStack Gap="0.5rem" JustifyContent="Radzen.JustifyContent.SpaceBetween">
                        <RadzenText TextStyle="TextStyle.H6" class="rz-mb-2">Cantidad Productos Vendidos</RadzenText>
                        <RadzenText TextStyle="TextStyle.H4">@totalProductosVendidos</RadzenText>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>

            <RadzenColumn SizeMD="6" SizeLG="4" class="rz-mb-3 rz-mb-md-0">
                <RadzenCard Variant="Radzen.Variant.Filled"
                            class="rz-p-3 rz-text-center rz-text-md-left"
                            Style="background-color: #fce4ec; color: #ad1457; border-radius: 8px;">
                    <RadzenStack Gap="0.5rem" JustifyContent="Radzen.JustifyContent.SpaceBetween">
                        <RadzenText TextStyle="TextStyle.H6" class="rz-mb-2">Ventas Acumuladas YTD</RadzenText>
                        <RadzenText TextStyle="TextStyle.H4">@(ventasAcumuladasYTD?.ToString("F2") ?? "0.00")</RadzenText>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>

            <RadzenColumn SizeMD="6" SizeLG="4" class="rz-mb-3 rz-mb-md-0">
                <RadzenCard Variant="Radzen.Variant.Filled"
                            class="rz-p-3 rz-text-center rz-text-md-left"
                            Style="background-color: #e1f5fe; color: #0288d1; border-radius: 8px;">
                    <RadzenStack Gap="0.5rem" JustifyContent="Radzen.JustifyContent.SpaceBetween">
                        <RadzenText TextStyle="TextStyle.H6" class="rz-mb-2">Producto Más Vendido</RadzenText>
                        <RadzenText TextStyle="TextStyle.H4">@productoMasVendido</RadzenText>
                    </RadzenStack>
                </RadzenCard>
            </RadzenColumn>
        </RadzenRow>
    </RadzenCard>

    <RadzenCard>
        <RadzenText TextStyle="TextStyle.H5">Gráfico de Productos por Categoría</RadzenText>
        @if (productsByCategory != null && productsByCategory.Any())
        {
            <RadzenChart Style="width: 100%; height: 350px;">
                <RadzenColumnSeries Data="@productsByCategory" ValueProperty="Count" CategoryProperty="CategoryName" />
                <RadzenValueAxis>
                    <RadzenGridLines Visible="true" />
                </RadzenValueAxis>
                <RadzenCategoryAxis>
                    <RadzenGridLines Visible="true" />
                </RadzenCategoryAxis>
                <RadzenLegend Visible="true" />
            </RadzenChart>
        }
        else
        {
            <RadzenText TextStyle="TextStyle.H6" Style="color: red;">
                No hay datos disponibles para mostrar el gráfico.
            </RadzenText>
        }

    </RadzenCard>
    <RadzenDataGrid Data="@inventoryItems" AllowSorting="true" AllowFiltering="true" Style="height: 350px;">
        <Columns>
            <RadzenDataGridColumn Property="Nombre" Title="Nombre" />
            <RadzenDataGridColumn Title="Categoría">
                <Template>
                    @categoryNames.GetValueOrDefault(((Producto_DTO)@context).CategoriaId, "Desconocido")
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Property="Existencia" Title="Cantidad" />
            <RadzenDataGridColumn Property="Precio" Title="Precio" />
        </Columns>
    </RadzenDataGrid>
</RadzenStack>
@code {
    private int totalProducts;
    private int inStock;
    private int outOfStock;
    private decimal? totalInventoryValue;
    private decimal? averagePrice;
    private int totalCategories;
    private string? ultimoProductoNombre;

    // Nuevas métricas agregadas
    private int LowStockCount;           // Productos con bajo stock (<= 5 unidades)
    private int SoldProductsCount;      // Contador total de productos vendidos
    private decimal AverageCategoryValue;  // Valor promedio por categoría
    private string? MostExpensiveProduct; // Producto más caro
    private string? MostStockedProduct;   // Producto con mayor cantidad en stock


    private decimal? totalVentas;
    private int numeroTransacciones;
    private decimal? promedioVenta;
    private decimal? ultimaVenta;
    private decimal? ventasPromedioPorDia;            // Nueva variable
    private decimal? ventasTotalesUltimoMes;         // Nueva variable
    private decimal? totalProductosVendidos;   // Nueva variable
    private decimal? ventasAcumuladasYTD;            // Nueva variable
    private string productoMasVendido;               // Nueva variable (si es un nombre de producto, es un string)


    private IEnumerable<CuentaCategoriaDTO> productsByCategory = Enumerable.Empty<CuentaCategoriaDTO>();
    private IEnumerable<Producto_DTO> inventoryItems = Enumerable.Empty<Producto_DTO>();
    private Dictionary<int, string> categoryNames = new();


    protected override async Task OnInitializedAsync()
    {
        await LoadData();
        await LoadSalesData();
    }

    private async Task LoadData()
    {
        try
        {
            // Obtener productos e inventario
            var productosResponse = await Http.GetFromJsonAsync<IEnumerable<Producto_DTO>>("api/producto/GetProductos");
            var resumenInventarioResponse = await Http.GetFromJsonAsync<ResumenInventarioDTO>("api/producto/GetResumenInventario");

            if (resumenInventarioResponse != null)
            {
                totalProducts = resumenInventarioResponse.TotalProducts;
                inStock = resumenInventarioResponse.InStock;
                outOfStock = resumenInventarioResponse.OutOfStock;
                totalInventoryValue = resumenInventarioResponse.TotalInventoryValue;
                averagePrice = resumenInventarioResponse.AveragePrice;
                totalCategories = resumenInventarioResponse.TotalCategories;
                ultimoProductoNombre = resumenInventarioResponse.UltimoProducto;
            }

            // Nuevas métricas
            if (productosResponse != null)
            {
                // Productos con bajo stock (<= 5 unidades)
                LowStockCount = productosResponse.Count(p => p.Existencia <= 5 && p.Eliminado != true);

                // Contador total de productos vendidos
                SoldProductsCount = productosResponse.Sum(p => p.Existencia); // Aquí puedes sumar la cantidad vendida si tienes ese campo

                // Valor promedio por categoría (promedio de precio por categoría)
                AverageCategoryValue = productosResponse
                    .GroupBy(p => p.CategoriaId)
                    .Average(g => g.Average(p => p.Precio));

                // Producto más caro
                MostExpensiveProduct = productosResponse.OrderByDescending(p => p.Precio)
                                                        .FirstOrDefault(p => p.Eliminado != true)?.Nombre;

                // Producto con mayor cantidad en stock
                MostStockedProduct = productosResponse.OrderByDescending(p => p.Existencia)
                                                        .FirstOrDefault(p => p.Eliminado != true)?.Nombre;
            }

            // Obtener categorías
            var categoriasResponse = await Http.GetFromJsonAsync<IEnumerable<Categoria_DTO>>("api/categoria");
            if (categoriasResponse != null)
            {
                categoryNames = categoriasResponse.ToDictionary(c => c.Id, c => c.Nombre);
            }

            // Obtener productos por categoría
            var productosPorCategoriaResponse = await Http.GetFromJsonAsync<IEnumerable<CuentaCategoriaDTO>>("api/producto/GetProductosPorCategoria");
            if (productosPorCategoriaResponse != null)
            {
                productsByCategory = productosPorCategoriaResponse
                    .Select(g => new CuentaCategoriaDTO
                        {
                            CategoryName = categoryNames.TryGetValue(g.Category, out var name) ? name : "Desconocido",
                            Count = g.Count
                        })
                    .Where(x => x.Count > 0)
                    .ToList();
            }

            // Obtener productos del inventario
            if (productosResponse != null)
            {
                inventoryItems = productosResponse.ToList();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar los datos: {ex.Message}");
        }
    }

    private async Task LoadSalesData()
    {
        try
        {
            // Obtener los datos de ventas
            var ventasResponse = await Http.GetFromJsonAsync<ResumenVentasDTO>("api/venta/GetResumenVentas");

            if (ventasResponse != null)
            {
                totalVentas = ventasResponse.TotalVentas;
                numeroTransacciones = ventasResponse.NumeroDeTransacciones;
                promedioVenta = ventasResponse.PromedioPorVenta;
                ultimaVenta = ventasResponse.UltimaVenta;
                ventasPromedioPorDia = ventasResponse.VentasPromedioPorDia;
                ventasTotalesUltimoMes = ventasResponse.VentasTotalesUltimoMes;
                ventasAcumuladasYTD = ventasResponse.VentasAcumuladasYTD;
                totalProductosVendidos = ventasResponse.TotalProductosVendidos;


                // Producto más vendido
                productoMasVendido = ventasResponse.ProductoMasVendido;

                // Si el producto más vendido es un ID, podemos hacer otra consulta para obtener el nombre
                if (string.IsNullOrEmpty(productoMasVendido))
                {
                    // Aquí sería necesario ajustar dependiendo de cómo obtienes el ID del producto más vendido
                    var productoMasVendidoId = ventasResponse.ProductoMasVendido; // Asumiendo que aquí tienes el ID del producto más vendido.

                    // Consultar el nombre del producto más vendido
                    var producto = await Http.GetFromJsonAsync<Producto_DTO>($"api/producto/{productoMasVendidoId}");

                    if (producto != null)
                    {
                        productoMasVendido = producto.Nombre;
                    }
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar datos de ventas: {ex.Message}");
        }
    }




}