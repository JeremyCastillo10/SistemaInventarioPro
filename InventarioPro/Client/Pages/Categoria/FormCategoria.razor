@page "/FormCategoria"
@using CurrieTechnologies.Razor.SweetAlert2
@using InventarioPro.Shared.DTOS.Categoria
@inject SweetAlertService swal
@inject HttpClient Http
@inject Radzen.DialogService DialogService
@using System.ComponentModel.DataAnnotations



<EditForm Model="@categoria_DTO" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label for="nombre" class="form-label font-weight-bold">Nombre</label>
        <RadzenTextBox id="nombre" @bind-Value="categoria_DTO.Nombre" Placeholder="Nombre" class="form-control" />
        <ValidationMessage For="@(() => categoria_DTO.Nombre)" class="text-danger" />
    </div>

    <div class="d-flex justify-content-between mt-4">
        <RadzenButton ButtonType="Radzen.ButtonType.Submit" Text="Guardar" Icon="save" class="btn btn-primary" />
        <RadzenButton Text="Cancelar" Icon="cancel" Click="@Cancelar" class="btn btn-secondary" />
    </div>
</EditForm>
                            


@code {

    [Parameter]
    public Categoria_DTO categoria_DTO { get; set; } = new Categoria_DTO();
  


    private async void Guardar()
    {


            var response = await Http.PostAsJsonAsync("api/categoria/savecategoria", categoria_DTO);

            if (response.IsSuccessStatusCode)
            {
            await ShowAlert("Éxito", (categoria_DTO.Id == 0) ? "categoria creada con éxito!" : "categoria actualizada con éxito!", SweetAlertIcon.Success);
                DialogService.Close(categoria_DTO);
                StateHasChanged();
            }
            else
            {
                var errorContent = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Error: {errorContent}");
                await ShowAlert("Error", "No se pudo crear la categoria.", SweetAlertIcon.Error);
            }
        
      
    }

    private async Task ShowAlert(string title, string text, SweetAlertIcon icon)
    {
        await swal.FireAsync(new SweetAlertOptions
            {
                Title = title,
                Text = text,
                Icon = icon,
                ConfirmButtonText = "OK"
            });
    }

    private void Cancelar()
    {
        DialogService.Close(null);
    }
}
