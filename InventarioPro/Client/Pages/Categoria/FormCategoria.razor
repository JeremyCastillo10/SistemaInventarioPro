@page "/FormCategoria"
@using CurrieTechnologies.Razor.SweetAlert2
@using InventarioPro.Shared.DTOS.Categoria
@inject SweetAlertService swal
@inject HttpClient Http
@inject Radzen.DialogService DialogService
@using System.ComponentModel.DataAnnotations


<div class="modal d-flex justify-content-center align-items-center show" style="display: block;" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="max-width: 400px; width: 100%;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Formulario</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <EditForm Model="@categoria_DTO" OnValidSubmit="Guardar">
                    <DataAnnotationsValidator />

                    <div class="mb-3">
                        <label for="nombre" class="form-label font-weight-bold">Nombre</label>
                        <RadzenTextBox id="nombre" @bind-Value="categoria_DTO.Nombre" Placeholder="Ingrese su nombre" class="form-control" />
                        <ValidationMessage For="@(() => categoria_DTO.Nombre)" class="text-danger" />
                    </div>

                    <div class="d-flex justify-content-between mt-4">
                        <RadzenButton ButtonType="Radzen.ButtonType.Submit" Text="Guardar" Icon="save" class="btn btn-primary" />
                        <RadzenButton Text="Cancelar" Icon="cancel" Click="@Cancelar" class="btn btn-secondary" />
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>


@code {

    [Parameter]
    public Categoria_DTO categoria_DTO { get; set; } = new Categoria_DTO();
  


    private async void Guardar()
    {
        var response = await Http.PostAsJsonAsync("api/categoria/savecategoria", categoria_DTO);




        if (response.IsSuccessStatusCode)
        {
            await ShowAlert("Éxito", categoria_DTO.Id == 0 ? "La categoria se ha creado con éxito!" : "La categoria se actualizado con éxito!", SweetAlertIcon.Success);
        }
    }

    private async Task ShowAlert(string title, string text, SweetAlertIcon icon)
    {
        await swal.FireAsync(new SweetAlertOptions
            {
                Title = title,
                Text = text,
                Icon = icon,
                ConfirmButtonText = "OK"
            });
    }

    private void Cancelar()
    {
        DialogService.Close(null);
    }
}
